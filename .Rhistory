df[df=="Strongly disagree"] <- 1
df[df=="Somewhat disagree"] <- 2
df[df=="Neither agree nor disagree"] <-3
df[df=="Somewhat agree"] <- 4
df[df=="Strongly agree"] <- 5
df[df=="Not at all"] <- 1
df[df=="Minimally"] <- 2
df[df=="Moderately"] <- 3
df[df=="Considerably"] <- 4
df[df=="Very much"] <- 5
### CHANGE VARIABLE CLASSES ###
df[,2:99] <- lapply(df[,2:99], as.numeric)
### RECODE REVERSE SCORED ITEMS ###
df$GA2A <- 6 - df$GA2A
df$GA2B <- 6 - df$GA2B
### SCREEN CARELESS RESPONSE #
longstring <- longstring(df[,2:99], avg=TRUE)
boxplot(longstring)
longstring
ls <- longstring$longstr
df$ls <- ls #bind longstring values to df
names(df)
df <- df %>% #deletes cases with longstrings >= 28 (outliers)
filter(ls < 28)
#import data
items <- read.csv("data/cleaned_itemdata.long.csv", header=TRUE)
#first need to subset 'items' dataframe into scale item dataframes
spjs <- dplyr::select(items, 3:10, 12:20)
oa <- dplyr::select(items, 21:35)
culture <- dplyr::select(items, 36:51)
fa(spjs)
cfa1 <- fa(spjs, nfactors=2, rotate="oblimin") #best fits 3 factors
cfa1 <- fa(spjs, nfactors=2, rotate="oblimin") #best fits 3 factors
cfa1
cfa1 <- fa(spjs, nfactors=8, rotate="oblimin") #best fits 3 factors
cfa1
cfa1$loadings
fa.diagram(cfa1)
cfa1
cfa1 <- fa(spjs, nfactors=2, rotate="oblimin") #best fits 3 factors
cfa1
cfa1 <- fa(spjs, nfactors=3, rotate="oblimin") #best fits 3 factors
cfa1
cfa1 <- fa(spjs, nfactors=2, rotate="oblimin") #best fits 3 factors
cfa1
cfa1 <- fa(spjs, nfactors=8, rotate="oblimin") #best fits 3 factors
cfa1
cfa1 <- fa(spjs, nfactors=7, rotate="oblimin") #best fits 3 factors
cfa1
cfa1 <- fa(spjs, nfactors=8, rotate="oblimin") #best fits 3 factors
cfa1
cfa1 <- fa(spjs, nfactors=7, rotate="oblimin") #best fits 3 factors
cfa1
cfa1 <- fa(spjs, nfactors=7, rotate="oblimin") #best fits 7 factors (one for each subscale)
cfa1
install.packages("fitMeasures")
library(fitMeasures)
install.packages("fitMeasures")
library(lavaan)
fitMeasures(cfa1, c("chisq.scaled", "df", "pvalue.scaled"))
lavaan::fitMeasures(cfa1, c("chisq.scaled", "df", "pvalue.scaled"))
?fitMeasures
fitMeasures(cfa1)
lavaan::fitMeasures(cfa1)
lavaan::fitMeasures(cfa1)
lavaan::fitMeasures(cfa1)
summary(cfa1)
fa.parallel(spjs)
cfa1 <- fa(spjs, nfactors=2, rotate="oblimin") #best fits 7 factors (one for each subscale)
cfa1
summary(cfa1)
cfa1
fitmeasures(cfa1)
detach(package::psych, unload = T)
detach("package::psych", unload = T)
?detach
detach(psych, unload=T)
detach_package <- function(pkg, character.only = FALSE)
{
if(!character.only)
{
pkg <- deparse(substitute(pkg))
}
search_item <- paste("package", pkg, sep = ":")
while(search_item %in% search())
{
detach(search_item, unload = TRUE, character.only = TRUE)
}
}
detach_package(psych)
fitmeasures(cfa1)
?cfa
cfa1
cfa1$chi
cfa1$STATISTIC
cfa1$dof
cfa1$PVAL
cfa1$RMSEA
orgjust.alpha <- dplyr::select(items, 3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20) ##removed ROA item (11)
a3 <- psych::alpha(orgjust.alpha)
a3
cfa1
cfa1$dof
cfa1$PVAL
cfa1$STATISTIC
cfa1$RMSEA
cfa1$rms
cfa1
cfa1$rms
compete.alpha <- dplyr::select(items, 36,37,38,39)
a8 <- psych::alpha(compete.alpha)
a8
socresp.alpha <- dplyr::select(items, 40,41,42,43)
a9 <- psych::alpha(socresp.alpha)
a9
support.alpha <- dplyr::select(items, 44,45,46,47)
a10 <- psych::alpha(support.alpha)
a10
innovate.alpha <- dplyr::select(items, 48,49,50,51)
a11 <- psych::alpha(innovate.alpha)
a11
fa.parallel(culture)
cfa3 <- fa(culture, nfactors=4, rotate="oblimin") ##messy 4-factor fit
#libraries
library(psych)
fa.parallel(culture)
cfa3 <- fa(culture, nfactors=4, rotate="oblimin") ##messy 4-factor fit
cfa3
cfa3$dof
cfa3$chi
cfa1$chi
cfa1$null.chisq
cfa1
cfa3$STATISTIC
cfa1$STATISTIC
cfa3$dof
cfa3$PVAL
cfa3$STATISTIC #model chi
cfa3$RMSEA
cfa3$rms
cfa3
cfa1$cfi
cfa1$fit
?cfa
?cfa
fa.parallel(oa)
cfa2 <- fa(oa, nfactors=1, rotate="oblimin") #could not fit 3-factor model, strongly 1
cfa2
cfa2$loadings
cfa2$dof
orgatrct.alpha <- dplyr::select(items, 21,22,23,24,25,26,27,28,29,30, 31,32,33,34,35)
a7 <- psych::alpha(orgatrct.alpha, check.keys = TRUE)
a7
fa.parallel(oa)
cfa2 <- fa(oa, nfactors=1, rotate="oblimin") #could not fit 3-factor model, strongly 1
cfa2$dof
cfa2$PVAL
cfa2$STATISTIC #model chi
cfa2$RMSEA
cfa2$rms
cfa2 <- fa(oa, nfactors=3, rotate="oblimin") #could not fit 3-factor model, strongly 1
cfa2
cfa2$loadings
cfa2$dof
cfa2$PVAL
cfa2$STATISTIC #model chi
cfa2$RMSEA
cfa2$rms
scales <- read.csv("data/cleaned_scaledata_long.csv", header=TRUE)
#libraries
library(psych)
##### descriptive statistics
a <- psych::describe(scales$procjust)
describeBy(scales$procjust, scales$condition)
b <- psych::describe(scales$interjust)
describeBy(scales$interjust, scales$condition)
desc <- rbind(a,b,c,d,e,f,g,h,i,j,k)
rm(a,b,c,d,e,f,g,h,i,j,k, desc)
library(car)
##### examine distributions of variables
hist(scales$procjust, breaks=20)
densityPlot(scales$procjust)
hist(scales$interjust, breaks=20)
densityPlot(scales$interjust)
hist(scales$orgjust, breaks=20)
densityPlot(scales$orgjust)
hist(scales$orgatrct, breaks=20) #skewed, as are subscales
densityPlot(scales$orgatrct)
hist(scales$orgatrct, breaks=20) #skewed, as are subscales
hist(scales$compete, breaks=20)
densityPlot(scales$compete)
hist(scales$socresp, breaks=20)
densityPlot(scales$socresp)
hist(scales$support, breaks=20)
densityPlot(scales$support)
hist(scales$innovate, breaks=20)
densityPlot(scales$innovate)
# QQ plot
scales.no.na <- na.omit(scales)
lm1 <- lm(orgatrct ~ AVI.id, data=scales.no.na)
plot(orgatrct ~ AVI.id, data=scales.no.na)
plot(lm1)
summary(lm2)
lm3 <- lm(innovate ~ AVI.id, data= scales.no.na)
plot(innovate ~ AVI.id, data=scales.no.na)
plot(lm3)
summary(lm4)
lm5 <- lm(compete ~ AVI.id, data= scales.no.na)
plot(compete ~ AVI.id, data=scales.no.na)
plot(lm5)
lm7 <- lm(orgatrct ~ orgjust, data=scales.no.na)
plot(orgatrct ~ orgjust, data=scales.no.na)
abline(lm7, col="red")
plot(lm7)
plot(lm1)
hist(resid(lm1), main = "Bin width = 0.01", xlab = "Residuals")
plot(lm1)
plot(lm2)
plot(lm7)
plot(resid(lm8))
plot(resid(lm7))
lm8 <- lm(orgatrct ~ innovate, data=scales.no.na)
plot(resid(lm8))
plot(resid(lm9))
lm9 <- lm(orgatrct ~ compete, data=scales.no.na)
plot(resid(lm9))
hist(resid(lm7))
hist(resid(lm8))
hist(resid(lm9))
lm10 <- lm(orgatrct ~ support, data=scales.no.na)
hist(resid(lm10))
lm11 <- lm(orgatrct ~ socresp, data=scales.no.na)
hist(resid(lm11))
plot(resid(lm11))
plot(resid(lm10))
plot(resid(lm2))
lm2 <- lm(orgjust ~ AVI.id, data=scales.no.na)
plot(resid(lm2))
hist(resid(lm2))
lm1 <- lm(orgatrct ~ AVI.id, data=scales.no.na)
plot(resid(lm1))
plot(resid(lm1), xlab = "Order of observations", ylab = "residuals")
qqnorm(resid(lm1))
qqline(resid(lm1))
qqline(resid(lm2))
lm2 <- lm(orgjust ~ AVI.id, data=scales.no.na)
qqline(resid(lm2))
qqline(resid(lm2))
plot(resid(lm2))
qqline(resid(lm2))
qqnorm(resid(lm1))
qqline(resid(lm1))
qqnorm(resid(lm2))
qqline(resid(lm2))
lm3 <- lm(innovate ~ AVI.id, data= scales.no.na)
qqnorm(resid(lm3))
qqline(resid(lm3))
lm7 <- lm(orgatrct ~ orgjust, data=scales.no.na)
qqnorm(resid(lm7))
qqline(resid(lm7))
lm10 <- lm(orgatrct ~ support, data=scales.no.na)
qqnorm(resid(lm10))
qqline(resid(lm10))
plot(lm10)
plot(lm7)
rm(lm1, lm2, lm3, lm4, lm5, lm6, lm6, lm7, lm8, lm9, lm10, lm11,lm.max)
lm.max <- lm(orgatrct ~ orgjust + compete + support + socresp + innovate + AVI.id, data=scales.no.na)
plot(lm.max)
scales <- read.csv("data/cleaned_scaledata_long.csv", header=TRUE)
#import data
items <- read.csv("data/cleaned_itemdata.long.csv", header=TRUE)
cfa2 <- fa(oa, nfactors=3, rotate="oblimin") #could not fit 3-factor model, strongly 1
cfa2
cfa2$loadings
cfa2$dof
cfa2$PVAL
cfa2$STATISTIC #model chi
cfa2$RMSEA
cfa2$rms
cfa2 <- fa(oa, nfactors=3, rotate="oblimin") #could not fit 3-factor model, strongly 1
#libraries
library(psych)
cfa2 <- fa(oa, nfactors=3, rotate="oblimin") #could not fit 3-factor model, strongly 1
#first need to subset 'items' dataframe into scale item dataframes
spjs <- dplyr::select(items, 3:10, 12:20)
oa <- dplyr::select(items, 21:35)
culture <- dplyr::select(items, 36:51)
cfa2 <- fa(oa, nfactors=3, rotate="oblimin") #could not fit 3-factor model, strongly 1
cfa2
cfa2$loadings
cfa2$dof
cfa2$PVAL
cfa2$STATISTIC #model chi
cfa2$RMSEA
cfa2$rms
fa.diagram(cfa2)
cfa2 <- fa(oa, nfactors=1, rotate="oblimin") #could not fit 3-factor model, strongly 1
cfa2
cfa2$loadings
cfa2$dof
cfa2$PVAL
cfa2$STATISTIC #model chi
cfa2$RMSEA
cfa2$rms
fa.diagram(cfa2)
#import data
scales <- read.csv("data/cleaned_scaledata_long.csv", header=TRUE)
#import data
scales <- read.csv("data/cleaned_scaledata_long.csv", header=TRUE)
#rename and recode
scales <- scales %>%
rename(id = id,
Sex = sex,
Ethnicity = ethnicity,
Age = age,
Employment = employ1,
Condition = condition,
AVI = AVI.id,
P_Justice=procjust,
I_Justice=interjust,
Justice=orgjust,
G_Attraction = genatrct,
Pursuit = intpurs,
Prestige = prest,
Attraction = orgatrct,
Competitiveness =compete,
Responsibility = socresp,
Supportiveness = support,
Innovativeness = innovate)
scales$Sex <- as.numeric(recode(scales$Sex,
"Male" = "1",
"Female" = "2",
"Other" = "3",
"Prefer not to respond" = "4"))
scales$Ethnicity <- as.numeric(recode(scales$Ethnicity,
"White" = "1",
"Black or African American" = "2",
"American Indian or Alaska Native" = "3",
"Asian" = "4",
"Native Hawaiian or Pacific Islander" = "5",
"Other" = "6",
"Prefer not to respond" = "7"))
scales$Employment <- as.numeric(recode(scales$Employment,
"Employed full time" = "1",
"Employed part time" = "2",
"Unemployed looking for work" = "3",
"Unemployed not looking for work" = "4",
"Retired" = "5",
"Student" = "6"))
scales$Age <- as.numeric(scales$Age)
scales$Condition <- NULL
mod1 <- lm(Justice ~ AVI, data=scales)
#libraries
library(psych)
library(car)
library(dplyr)
library(ggplot2)
library(apaTables)
library(corrplot)
library(Hmisc)
library(ggcorrplot)
library(xlsx)
library(mediation)
library(tidyr)
#rename and recode
scales <- scales %>%
rename(id = id,
Sex = sex,
Ethnicity = ethnicity,
Age = age,
Employment = employ1,
Condition = condition,
AVI = AVI.id,
P_Justice=procjust,
I_Justice=interjust,
Justice=orgjust,
G_Attraction = genatrct,
Pursuit = intpurs,
Prestige = prest,
Attraction = orgatrct,
Competitiveness =compete,
Responsibility = socresp,
Supportiveness = support,
Innovativeness = innovate)
scales$Sex <- as.numeric(recode(scales$Sex,
"Male" = "1",
"Female" = "2",
"Other" = "3",
"Prefer not to respond" = "4"))
scales$Ethnicity <- as.numeric(recode(scales$Ethnicity,
"White" = "1",
"Black or African American" = "2",
"American Indian or Alaska Native" = "3",
"Asian" = "4",
"Native Hawaiian or Pacific Islander" = "5",
"Other" = "6",
"Prefer not to respond" = "7"))
scales$Employment <- as.numeric(recode(scales$Employment,
"Employed full time" = "1",
"Employed part time" = "2",
"Unemployed looking for work" = "3",
"Unemployed not looking for work" = "4",
"Retired" = "5",
"Student" = "6"))
scales$Age <- as.numeric(scales$Age)
scales$Condition <- NULL
###### REGRESSIONs ######
max.mod <- lm(Attraction ~ AVI + Justice + Innovativeness + Supportiveness + Responsibility + Competitiveness, data = scales)
summary(max.mod)
mod1 <- lm(Justice ~ AVI, data=scales)
summary(mod1)
mod2 <- lm(Competitiveness ~ AVI, data=scales)
summary(mod2)
mod3 <- lm(Responsibility ~ AVI, data=scales)
summary(mod3)
mod4 <- lm(Innovativeness ~ AVI, data=scales)
summary(mod4)
mod5 <- lm(Supportiveness ~ AVI, data=scales)
summary(mod5)
mod6 <- lm(Attraction ~ AVI, data=scales)
summary(mod6)
mod7 <- lm(Attraction ~ Justice, data=scales)
summary(mod7)
mod8 <- lm(Attraction ~ Competitiveness, data=scales)
summary(mod8)
mod9 <- lm(Attraction ~ Responsibility, data=scales)
summary(mod9)
mod10 <- lm(Attraction ~ Innovativeness, data=scales)
summary(mod10)
mod11 <- lm(Attraction ~ Supportiveness, data=scales)
summary(mod11)
# regressions controlling for Justice and/or AVI
con1 <- lm(Attraction ~ Competitiveness + Justice, data=scales)
summary(con1)
con2 <- lm(Attraction ~ Innovativeness + Justice, data=scales)
summary(con2)
con3 <- lm(Attraction ~ Responsibility + Justice, data=scales)
summary(con3)
con4 <- lm(Attraction ~ Supportiveness + Justice, data=scales)
summary(con4)
con5 <- lm(Attraction ~ AVI + Justice + Competitiveness, data=scales)
summary(con5)
con6 <- lm(Attraction ~ AVI + Innovativeness + Justice, data=scales)
summary(con6)
#import data
scales <- read.csv("data/cleaned_scaledata_long.csv", header=TRUE)
#libraries
library(psych)
library(car)
library(dplyr)
library(ggplot2)
library(mediation)
mod1 <- lm(Justice ~ AVI, data=scales)
#rename and recode
scales <- scales %>%
rename(id = id,
Sex = sex,
Ethnicity = ethnicity,
Age = age,
Employment = employ1,
Condition = condition,
AVI = AVI.id,
P_Justice=procjust,
I_Justice=interjust,
Justice=orgjust,
G_Attraction = genatrct,
Pursuit = intpurs,
Prestige = prest,
Attraction = orgatrct,
Competitiveness =compete,
Responsibility = socresp,
Supportiveness = support,
Innovativeness = innovate)
scales$Sex <- as.numeric(recode(scales$Sex,
"Male" = "1",
"Female" = "2",
"Other" = "3",
"Prefer not to respond" = "4"))
scales$Ethnicity <- as.numeric(recode(scales$Ethnicity,
"White" = "1",
"Black or African American" = "2",
"American Indian or Alaska Native" = "3",
"Asian" = "4",
"Native Hawaiian or Pacific Islander" = "5",
"Other" = "6",
"Prefer not to respond" = "7"))
scales$Employment <- as.numeric(recode(scales$Employment,
"Employed full time" = "1",
"Employed part time" = "2",
"Unemployed looking for work" = "3",
"Unemployed not looking for work" = "4",
"Retired" = "5",
"Student" = "6"))
scales$Age <- as.numeric(scales$Age)
scales$Condition <- NULL
mod1 <- lm(Justice ~ AVI, data=scales)
summary(mod1)
mod1.scaled <- lm(scale(Justice) ~ scale(AVI), data-scales)
mod1.scaled <- lm(scale(Justice) ~ (AVI), data-scales)
install.packages("lm.beta")
library(lm.beta)
lm.beta(mod1)
summary(mod1)
lm.beta(me1)
# x = AVI, m = OCP dimensions, y = attraction
me1 <- mediation::mediate(mod2, mod12, treat="AVI", mediator="Competitiveness",sims=500, dropobs=TRUE)
#multiple regressions needed for meditate()
mod12 <- lm(Attraction ~ AVI + Competitiveness, data=scales)
# x = AVI, m = OCP dimensions, y = attraction
me1 <- mediation::mediate(mod2, mod12, treat="AVI", mediator="Competitiveness",sims=500, dropobs=TRUE)
summary(me1)
lm.beta(me1)
