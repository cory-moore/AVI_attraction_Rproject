me4 <- mediation::mediate(mod4, mod14, treat="AVI", mediator="Innovativeness",sims=500, dropobs=TRUE)
mod1 <- lm(Justice ~ AVI, data=scales)
summary(mod2)
mod3 <- lm(Responsibility ~ AVI, data=scales)
mod4 <- lm(Innovativeness ~ AVI, data=scales)
mod5 <- lm(Supportiveness ~ AVI, data=scales)
mod6 <- lm(Attraction ~ AVI, data=scales)
mod7 <- lm(Attraction ~ Justice, data=scales)
mod8 <- lm(Attraction ~ Competitiveness, data=scales)
mod9 <- lm(Attraction ~ Responsibility, data=scales)
mod10 <- lm(Attraction ~ Innovativeness, data=scales)
mod11 <- lm(Attraction ~ Supportiveness, data=scales)
# x = AVI, m = OCP dimensions, y = attraction
me1 <- mediation::mediate(mod2, mod12, treat="AVI", mediator="Competitiveness",sims=500, dropobs=TRUE)
me4 <- mediation::mediate(mod4, mod14, treat="AVI", mediator="Innovativeness",sims=500, dropobs=TRUE)
#multiple regressions needed for meditate()
mod12 <- lm(Attraction ~ AVI + Competitiveness, data=scales)
# x = AVI, m = OCP dimensions, y = attraction
me1 <- mediation::mediate(mod2, mod12, treat="AVI", mediator="Competitiveness",sims=500, dropobs=TRUE) ## WHY tHIS ERROR
mod4 <- lm(Innovativeness ~ AVI, data=scales)
mod15 <- lm(Attraction ~ AVI + Innovativeness, data=scales)
me4 <- mediation::mediate(mod4, mod15, treat="AVI", mediator="Innovativeness",sims=500, dropobs=TRUE) ## WHY tHIS ERROR
me5 <- mediation::mediate(mod1, mod16, treat="AVI", mediator="Justice",sims=500, dropobs=TRUE)
mod16 <- lm(Attraction ~ AVI + Justice, data=scales)
me5 <- mediation::mediate(mod1, mod16, treat="AVI", mediator="Justice",sims=500, dropobs=TRUE)
tidy.me1 <- tidy(me1, conf.int = TRUE, conf.level = .95)
tidy.me2 <- tidy(me2, conf.int = TRUE, conf.level = .95)
tidy.me3 <- tidy(me3, conf.int = TRUE, conf.level = .95)
tidy.me4 <- tidy(me4, conf.int = TRUE, conf.level = .95)
tidy.me5 <- tidy(me5, conf.int = TRUE, conf.level = .95)
tidy.me1
summary(me2)
tidy.me2
tidy.me2 <- tidy(me2)
tidy.me2
tidy.me2 <- tidy(me2, conf.int = TRUE, conf.level = .95)
tidy.me2
summary(me2)
summary(mod6)
summary(mod13)
#excel
write.xlsx(as.data.frame(tidy.me1), file="output/output.xlsx",sheetName="med1.compete",col.names=TRUE,row.names=FALSE,append=TRUE)
write.xlsx(as.data.frame(tidy.me2), file="output/output.xlsx",sheetName="med2.responsibility",col.names=TRUE,row.names=FALSE,append=TRUE)
write.xlsx(as.data.frame(tidy.me3), file="output/output.xlsx",sheetName="med3.support",col.names=TRUE,row.names=FALSE,append=TRUE)
write.xlsx(as.data.frame(tidy.me4), file="output/output.xlsx",sheetName="med4.innovate",col.names=TRUE,row.names=FALSE,append=TRUE)
write.xlsx(as.data.frame(tidy.me5), file="output/output.xlsx",sheetName="med5.justice",col.names=TRUE,row.names=FALSE,append=TRUE)
library(ggplot2)
library(corrplot)
library(mediation)
library(tidyr)
#libraries
library(psych)
library(dplyr)
#import data
scales <- read.csv("data/cleaned_scaledata_long.csv", header=TRUE)
#rename and recode
scales <- scales %>%
rename(id = id,
Sex = sex,
Ethnicity = ethnicity,
Age = age,
Employment = employ1,
Condition = condition,
AVI = AVI.id,
P_Justice=procjust,
I_Justice=interjust,
Justice=orgjust,
G_Attraction = genatrct,
Pursuit = intpurs,
Prestige = prest,
Attraction = orgatrct,
Competitiveness =compete,
Responsibility = socresp,
Supportiveness = support,
Innovativeness = innovate)
scales$Sex <- as.numeric(recode(scales$Sex,
"Male" = "1",
"Female" = "2",
"Other" = "3",
"Prefer not to respond" = "4"))
scales$Ethnicity <- as.numeric(recode(scales$Ethnicity,
"White" = "1",
"Black or African American" = "2",
"American Indian or Alaska Native" = "3",
"Asian" = "4",
"Native Hawaiian or Pacific Islander" = "5",
"Other" = "6",
"Prefer not to respond" = "7"))
scales$Employment <- as.numeric(recode(scales$Employment,
"Employed full time" = "1",
"Employed part time" = "2",
"Unemployed looking for work" = "3",
"Unemployed not looking for work" = "4",
"Retired" = "5",
"Student" = "6"))
scales$Age <- as.numeric(scales$Age)
scales$Condition <- NULL
mod1 <- lm(Justice ~ AVI, data=scales)
summary(mod1)
#libraries
library(psych)
library(car)
library(dplyr)
library(ggplot2)
library(apaTables)
library(corrplot)
library(Hmisc)
library(ggcorrplot)
library(xlsx)
library(mediation)
library(tidyr)
#import data
scales <- read.csv("data/cleaned_scaledata_long.csv", header=TRUE)
#rename and recode
scales <- scales %>%
rename(id = id,
Sex = sex,
Ethnicity = ethnicity,
Age = age,
Employment = employ1,
Condition = condition,
AVI = AVI.id,
P_Justice=procjust,
I_Justice=interjust,
Justice=orgjust,
G_Attraction = genatrct,
Pursuit = intpurs,
Prestige = prest,
Attraction = orgatrct,
Competitiveness =compete,
Responsibility = socresp,
Supportiveness = support,
Innovativeness = innovate)
scales$Sex <- as.numeric(recode(scales$Sex,
"Male" = "1",
"Female" = "2",
"Other" = "3",
"Prefer not to respond" = "4"))
scales$Ethnicity <- as.numeric(recode(scales$Ethnicity,
"White" = "1",
"Black or African American" = "2",
"American Indian or Alaska Native" = "3",
"Asian" = "4",
"Native Hawaiian or Pacific Islander" = "5",
"Other" = "6",
"Prefer not to respond" = "7"))
scales$Employment <- as.numeric(recode(scales$Employment,
"Employed full time" = "1",
"Employed part time" = "2",
"Unemployed looking for work" = "3",
"Unemployed not looking for work" = "4",
"Retired" = "5",
"Student" = "6"))
scales$Age <- as.numeric(scales$Age)
scales$Condition <- NULL
###### REGRESSIONs ######
max.mod <- lm(Attraction ~ AVI + Justice + Innovativeness + Supportiveness + Responsibility + Competitiveness, data = scales)
mod1 <- lm(Justice ~ AVI, data=scales)
mod2 <- lm(Competitiveness ~ AVI, data=scales)
mod3 <- lm(Responsibility ~ AVI, data=scales)
mod4 <- lm(Innovativeness ~ AVI, data=scales)
mod5 <- lm(Supportiveness ~ AVI, data=scales)
mod6 <- lm(Attraction ~ AVI, data=scales)
mod7 <- lm(Attraction ~ Justice, data=scales)
mod8 <- lm(Attraction ~ Competitiveness, data=scales)
mod9 <- lm(Attraction ~ Responsibility, data=scales)
mod10 <- lm(Attraction ~ Innovativeness, data=scales)
mod11 <- lm(Attraction ~ Supportiveness, data=scales)
#multiple regressions needed for meditate()
mod12 <- lm(Attraction ~ AVI + Competitiveness, data=scales)
mod13 <- lm(Attraction ~ AVI + Responsibility, data=scales)
mod14 <- lm(Attraction ~ AVI + Supportiveness, data=scales)
mod15 <- lm(Attraction ~ AVI + Innovativeness, data=scales)
mod16 <- lm(Attraction ~ AVI + Justice, data=scales)
# x = AVI, m = OCP dimensions, y = attraction
me1 <- mediation::mediate(mod2, mod12, treat="AVI", mediator="Competitiveness",sims=500, dropobs=TRUE)
summary(me1)
me2 <- mediation::mediate(mod3, mod13, treat="AVI", mediator="Responsibility",sims=500, dropobs=TRUE)
summary(me2)
me3 <- mediation::mediate(mod5, mod14, treat="AVI", mediator="Supportiveness",sims=500, dropobs=TRUE)
summary(me3)
me4 <- mediation::mediate(mod4, mod15, treat="AVI", mediator="Innovativeness",sims=500, dropobs=TRUE)
summary(me4)
# x = AVI, m = Justice, y = attraction
me5 <- mediation::mediate(mod1, mod16, treat="AVI", mediator="Justice",sims=500, dropobs=TRUE)
summary(me5)
###### REGRESSIONs ######
max.mod <- lm(Attraction ~ AVI + Justice + Innovativeness + Supportiveness + Responsibility + Competitiveness, data = scales)
summary(max.mod)
setwd("/Volumes/GoogleDrive/My Drive/1. Professional/Doctoral work/a. Coursework/Advanced Methods in Psychology/Research - 5 - Factorial experiment")
#import the dataset 'visual.csv'
visual <- read.csv("data/visual.csv", header=TRUE)
View(visual)
#view data
View(visual)
describe(visual)
#libraries
library(psych)
describe(visual)
#make categorical variables (target, distractor, number) factor variables
visual <- as.factor(visual[,2:4])
#import the dataset 'visual.csv'
visual <- read.csv("data/visual.csv", header=TRUE)
#make categorical variables (target, distractor, number) factor variables
visual[,2:4] <- as.factor(visual[,2:4])
#import the dataset 'visual.csv'
visual <- read.csv("data/visual.csv", header=TRUE)
#import the dataset 'visual.csv'
visual <- read.csv("data/visual.csv", header=TRUE, stringsAsFactors = TRUE)
#view data
View(visual)
describe(visual)
## fit one-way ANOVA models
aov1 <- aov(MeanScore ~ target, data=visual)
## fit one-way ANOVA models
aov1 <- aov(MeanScore ~ Target, data=visual)
summary(aov1)
aov2 <- aov(MeanScore ~ Distractor, data=visual)
summary(aov2)
## DV = MeanScore, IV = Number few or many
aov3 <- aov(MeanScore ~ Number, data=visaul)
## DV = MeanScore, IV = Number few or many
aov3 <- aov(MeanScore ~ Number, data=visual)
summary(visual)
summary(aov3)
" Next, we will do two- and three-way ANOVAs by adding additional factors (IVs) and interactions"
" Next, we will do two- and three-way ANOVAs by adding additional factors (IVs) and interactions.
But first, lets plot the interactions for those upcoming ANOVA models"
interaction.plot(x.factor = visual$Target, #x-axis variable
trace.factor = visual$Distractor, #variable for lines
response = visual$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence",
xlab = "Target (Absent or Present",
trace.label = "Distractor")
interaction.plot(x.factor = visual$Target, #x-axis variable
trace.factor = visual$Distractor, #variable for lines
response = visual$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)",
xlab = "Target (Absent or Present)",
trace.label = "Distractor")
?interaction.plot
visual %>%
ggplot(aes(Target, MeanScore)) +
geom_line(aes(group = Distractor, color = Distractor)) +
geom_point(aes(color = Distractor))
#libraries
library(ggplot2)
glimpse(visual)
library(dplyr)
glimpse(visual)
visual %>%
ggplot(aes(Target, MeanScore)) +
geom_line(aes(group = Distractor, color = Distractor)) +
geom_point(aes(color = Distractor))
visual %>%
ggplot(aes(Target, MeanScore)) +
geom_line(aes(group = Distractor)) +
geom_point()
visual %>%
ggplot(aes(Target, MeanScore, color = Distractor)) +
geom_line(aes(group = Distractor)) +
geom_point()
visual.num <- visual %>% filter(Number == few)
visual.num <- visual %>% filter(Number == "few")
View(visual.num)
interaction.plot(x.factor = visual.num$Target, #x-axis variable
trace.factor = visual.num$Distractor, #variable for lines
response = visual.num$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)",
xlab = "Target (Absent or Present)",
trace.label = "Distractor")
interaction.plot(x.factor = visual.few$Target, #x-axis variable
trace.factor = visual.few$Distractor, #variable for lines
response = visual.few$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)",
xlab = "Target (Absent or Present)",
trace.label = "Distractor")
visual.few <- visual %>% filter(Number == "few")
interaction.plot(x.factor = visual.few$Target, #x-axis variable
trace.factor = visual.few$Distractor, #variable for lines
response = visual.few$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)",
xlab = "Target (Absent or Present)",
trace.label = "Distractor")
few <- visual %>% filter(Number == "few")
interaction.plot(x.factor = few$Target, #x-axis variable
trace.factor = few$Distractor, #variable for lines
response = few$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)",
xlab = "Target (Absent or Present)",
trace.label = "Distractor")
interaction.plot(x.factor = few$Target, #x-axis variable
trace.factor = few$Distractor, #variable for lines
response = few$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)",
xlab = "Target (Absent or Present)",
trace.label = "Distractor")
many <- visual %>% filter(Number == "many")
interaction.plot(x.factor = many$Target, #x-axis variable
trace.factor = many$Distractor, #variable for lines
response = many$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)",
xlab = "Target (Absent or Present)",
trace.label = "Distractor")
?interaction.plot
interaction.plot(x.factor = few$Target, #x-axis variable
trace.factor = few$Distractor, #variable for lines
response = few$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)",
xlab = "Target (Absent or Present)",
trace.label = "Distractor")
interaction.plot(x.factor = few$Target, #x-axis variable
trace.factor = few$Distractor, #variable for lines
response = few$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)",
xlab = "Target (Absent or Present)",
trace.label = "Distractor",
main = "Interaction plot: Distractor x Target (when Number = few)")
interaction.plot(x.factor = many$Target, #x-axis variable
trace.factor = many$Distractor, #variable for lines
response = many$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)",
xlab = "Target (Absent or Present)",
trace.label = "Distractor",
main = "Interaction plot: Distractor x Target (when Number = many)")
# plots the interaction for Distractor x Target (when Number = many)
interaction.plot(x.factor = many$Target, #x-axis variable
trace.factor = many$Distractor, #variable for lines
response = many$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)",
xlab = "Target (Absent or Present)",
trace.label = "Distractor",
main = "Interaction plot: Distractor x Target (when Number = many)")
# plots the interaction for Distractor x Target (when Number = few)
interaction.plot(x.factor = few$Target, #x-axis variable
trace.factor = few$Distractor, #variable for lines
response = few$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)",
xlab = "Target (Absent or Present)",
trace.label = "Distractor",
main = "Interaction plot: Distractor x Target (when Number = few)",
col = c("red", "blue"))
# plots the interaction for Distractor x Target (when Number = many)
interaction.plot(x.factor = many$Target, #x-axis variable
trace.factor = many$Distractor, #variable for lines
response = many$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)",
xlab = "Target (Absent or Present)",
trace.label = "Distractor",
main = "Interaction plot: Distractor x Target (when Number = many)",
col = c("red", "blue"))
# plots the interaction for Distractor x Target (when Number = many)
interaction.plot(x.factor = many$Target, #x-axis variable
trace.factor = many$Distractor, #variable for lines
response = many$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)", #y-axis label
xlab = "Target (Absent or Present)", #x-axis label
trace.label = "Distractor", #Legend label
main = "Interaction plot: Distractor x Target (when Number = many)", #main title
col = c("red", "blue")) #adds color to the lines
# this creates a new dataframe containing only trials with few distractors
# used in the following interaction plot
absent <- visual %>% filter(Target == "absent")
# plots the interaction for Distractor x Target (when Number = many)
interaction.plot(x.factor = many$Target, #x-axis variable
trace.factor = many$Distractor, #variable for lines
response = many$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)", #y-axis label
xlab = "Target (Absent or Present)", #x-axis label
trace.label = "Distractor", #Legend label
main = "Interaction plot: Distractor x Target (when Number = many)", #main title
col = c("red", "blue")) #adds color to the lines
# plots the interaction for Distractor x Target (when Number = few)
interaction.plot(x.factor = absent$Distractor, #x-axis variable
trace.factor = absent$Number, #variable for lines
response = absent$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)", #y-axis label
xlab = "Distractor (O or Y)", #x-axis label
trace.label = "Number", #legend label
main = "Interaction plot: Distractor x Target (when Number = few)", #main title
col = c("red", "blue")) #adds color to the lines
# plots the interaction for Distractor x Target (when Number = many)
interaction.plot(x.factor = many$Target, #x-axis variable
trace.factor = many$Distractor, #variable for lines
response = many$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)", #y-axis label
xlab = "Target (Absent or Present)", #x-axis label
trace.label = "Distractor", #Legend label
main = "Interaction plot: Distractor x Target (when Number = many)", #main title
col = c("red", "blue")) #adds color to the lines
# plots the interaction for Distractor x Target (when Number = few)
interaction.plot(x.factor = absent$Distractor, #x-axis variable
trace.factor = absent$Number, #variable for lines
response = absent$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)", #y-axis label
xlab = "Distractor (O or Y)", #x-axis label
trace.label = "Number", #legend label
main = "Interaction plot: Distractor x Target (when Number = few)", #main title
col = c("red", "blue")) #adds color to the lines
# plots the interaction for Distractor x Target (when Number = few)
interaction.plot(x.factor = absent$Distractor, #x-axis variable
trace.factor = absent$Number, #variable for lines
response = absent$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)", #y-axis label
xlab = "Distractor (O or Y)", #x-axis label
trace.label = "Number", #legend label
main = "Interaction plot: Distractor x Number (when Target = absent)", #maintitle
col = c("red", "blue")) #adds color to the lines
# this creates a new dataframe containing only trials with many distractors
# used in the following interaction plot
present <- visual %>% filter(Target == "present")
# plots the interaction for Distractor x Target (when Number = few)
interaction.plot(x.factor = present$Distractor, #x-axis variable
trace.factor = present$Number, #variable for lines
response = present$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)", #y-axis label
xlab = "Distractor (O or Y)", #x-axis label
trace.label = "Number", #legend label
main = "Interaction plot: Distractor x Number (Target = present)", #maintitle
col = c("red", "blue")) #adds color to the lines
summary(aov3)
aov4 <- aov(MeanScore ~ Target + Distractor + Number, data=visual)
summary(aov4)
aov4 <- aov(MeanScore ~ Target * Distractor * Number, data=visual)
summary(aov4)
### IMPORT the dataset 'visual.csv'
## select header=TRUE and stringsAsFactors=TRUE
## imports categorical variables (target, distractor, number) as factors
visual <- read.csv("data/visual.csv", header=TRUE, stringsAsFactors = TRUE)
View(visual)
## DV = MeanScore, IV = Target absence or presence
aov1 <- aov(MeanScore ~ Target, data=visual)
summary(aov1)
## DV = MeanScore, IV = Distractor O's or Y's
aov2 <- aov(MeanScore ~ Distractor, data=visual)
summary(aov2)
## DV = MeanScore, IV = Number few or many
aov3 <- aov(MeanScore ~ Number, data=visual)
summary(aov3)
# this creates a new dataframe containing only trials with few distractors
# used in the following interaction plot
few <- visual %>% filter(Number == "few")
# plots the interaction for Distractor x Target (when Number = few)
interaction.plot(x.factor = few$Target, #x-axis variable
trace.factor = few$Distractor, #variable for lines
response = few$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)", #y-axis label
xlab = "Target (Absent or Present)", #x-axis label
trace.label = "Distractor", #legend label
main = "Interaction plot: Target x Distractor (when Number = few)", #main title
col = c("red", "blue")) #adds color to the lines
# this creates a new dataframe containing only trials with many distractors
# used in the following interaction plot
many <- visual %>% filter(Number == "many")
# plots the interaction for Distractor x Target (when Number = many)
interaction.plot(x.factor = many$Target, #x-axis variable
trace.factor = many$Distractor, #variable for lines
response = many$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)", #y-axis label
xlab = "Target (Absent or Present)", #x-axis label
trace.label = "Distractor", #Legend label
main = "Interaction plot: Target x Distractor (when Number = many)", #main title
col = c("red", "blue")) #adds color to the lines
# this creates a new dataframe containing only trials with few distractors
# used in the following interaction plot
absent <- visual %>% filter(Target == "absent")
# plots the interaction for Distractor x Target (when Number = few)
interaction.plot(x.factor = absent$Distractor, #x-axis variable
trace.factor = absent$Number, #variable for lines
response = absent$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)", #y-axis label
xlab = "Distractor (O or Y)", #x-axis label
trace.label = "Number", #legend label
main = "Interaction plot: Distractor x Number (Target = absent)", #maintitle
col = c("red", "blue")) #adds color to the lines
# this creates a new dataframe containing only trials with many distractors
# used in the following interaction plot
present <- visual %>% filter(Target == "present")
# plots the interaction for Distractor x Target (when Number = few)
interaction.plot(x.factor = present$Distractor, #x-axis variable
trace.factor = present$Number, #variable for lines
response = present$MeanScore, #y-axis variable
fun = mean, #metric to plot
ylab = "Combined Score (Accuracy * Confidence)", #y-axis label
xlab = "Distractor (O or Y)", #x-axis label
trace.label = "Number", #legend label
main = "Interaction plot: Distractor x Number (Target = present)", #maintitle
col = c("red", "blue")) #adds color to the lines
