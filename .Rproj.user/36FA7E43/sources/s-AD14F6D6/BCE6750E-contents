#libraries          
library(psych)
library(car)
library(dplyr)
library(ggplot2)
library(apaTables)

#import data
items <- read.csv("prelim_data/cleaned_itemdata.csv", header=TRUE)
scales <- read.csv("prelim_data/cleaned_scaledata_long.csv", header=TRUE)


"##########################
INSPECT SCALES:
reliability
distributions (histograms and boxplots)
descriptive stats (means and SDs)
factor analysis
###########################"

#### check reliabilities
procjust.alpha <- select(items, 1,2,3,4,5,6,7,8,9,50,51,52,53,54,55,56,57,58)
psych::alpha(procjust.alpha)
rm(procjust.alpha)

interjust.alpha <- select(items, 10,11,12,13,14,15,16,17,18,59,60,61,62,63,64,65,66,67)
psych::alpha(interjust.alpha)
rm(interjust.alpha)

orgjust.alpha <- select(items, 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67)
psych::alpha(orgjust.alpha)
rm(orgjust.alpha)

genatrct.alpha <-select(items,19,20,21,22,23,68,69,70,71,72)
psych::alpha(genatrct.alpha, check.keys = TRUE) ##check reverse scored items?
rm(genatrct.alpha)

intpurs.alpha <- select(items, 24,25,26,27,28,73,74,75,76,77)
psych::alpha(intpurs.alpha)
rm(intpurs.alpha)

prest.alpha <- select(items,29,30,31,32,33,78,79,80,81,82)
psych::alpha(prest.alpha)
rm(prest.alpha)

orgatrct.alpha <- select(items, 19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82)
psych::alpha(orgatrct.alpha, check.keys = TRUE) ##check reverse scored items?
rm(orgatrct.alpha)

compete.alpha <- select(items, 34,35,36,37,83,84,85,86)
psych::alpha(compete.alpha)
rm(compete.alpha)

socresp.alpha <- select(items, 38,39,40,41,87,88,89,90)
psych::alpha(socresp.alpha)
rm(socresp.alpha)

support.alpha <- select(items, 42,43,44,45,91,92,93,94)
psych::alpha(support.alpha)
rm(support.alpha)

innovate.alpha <- select(items, 46,47,48,49,95,96,97,98)
psych::alpha(innovate.alpha)
rm(innovate.alpha)


##### examine distributions of variables
hist(scales$procjust)
densityPlot(scales$procjust)

hist(scales$interjust) #skewed 
densityPlot(scales$interjust)

hist(scales$orgjust)
densityPlot(scales$orgjust)

hist(scales$genatrct) 
densityPlot(scales$genatrct)

hist(scales$intpurs) 
densityPlot(scales$intpurs)

hist(scales$prest) 
densityPlot(scales$prest)

hist(scales$orgatrct) #skewed, as are subscales
densityPlot(scales$orgatrct)

hist(scales$compete)
densityPlot(scales$compete)

hist(scales$socresp)
densityPlot(scales$socresp)

hist(scales$support)
densityPlot(scales$support)

hist(scales$innovate)
densityPlot(scales$innovate)

##### Boxplots of primary variables by condition
ggplot(scales, aes(x=condition, y=orgjust, fill=condition)) +
  geom_boxplot() +
  ggtitle("Organization Justice Scores by condition")

ggplot(scales, aes(x=condition, y=orgatrct, fill=condition)) +
  geom_boxplot() +
  ggtitle("Organization Attraction Scores by condition")

ggplot(scales, aes(x=condition, y=innovate, fill=condition)) +
  geom_boxplot() +
  ggtitle("Innovativeness Scores by condition")

ggplot(scales, aes(x=condition, y=support, fill=condition)) +
  geom_boxplot() +
  ggtitle("Supportiveness Scores by condition")

ggplot(scales, aes(x=condition, y=compete, fill=condition)) +
  geom_boxplot() +
  ggtitle("Competiveness Scores by condition")

ggplot(scales, aes(x=condition, y=socresp, fill=condition)) +
  geom_boxplot() +
  ggtitle("Social Responsibility Scores by condition")

##### descriptive statistics
describe(scales$procjust)
describeBy(scales$procjust, scales$condition)

describe(scales$interjust)
describeBy(scales$interjust, scales$condition)

describe(scales$orgjust)
describeBy(scales$orgjust, scales$condition)

describe(scales$genatrct)
describeBy(scales$genatrct, scales$condition)

describe(scales$intpurs)
describeBy(scales$intpurs, scales$condition)

describe(scales$prest)
describeBy(scales$prest, scales$condition)

describe(scales$orgatrct)
describeBy(scales$orgatrct, scales$condition)

describe(scales$compete)
describeBy(scales$compete, scales$condition)

describe(scales$socresp)
describeBy(scales$socresp, scales$condition)

describe(scales$support)
describeBy(scales$support, scales$condition)

describe(scales$innovate)
describeBy(scales$innovate, scales$condition)


##### CFA for scales   
"need to work on interpretation of findings"

#first need to subset 'items' dataframe into scale item dataframes
spjs <- select(items, 1:18, 50:67)
oa <- select(items, 19:33, 68:82)
culture <- select(items, 34:49, 83:98) 

fa.parallel(spjs)
fa(spjs, nfactors=2, rotate="promax", fm="ml")

fa.parallel(oa)
fa(oa, nfactors=3, rotate="promax", fm="ml")

fa.parallel(culture)
fa(spjs, nfactors=4, rotate="promax", fm="ml")



