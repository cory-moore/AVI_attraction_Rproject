#libraries          
library(psych) 
library(car)
library(dplyr)
library(ggplot2)
library(apaTables)
library(moments)

#import data
items <- read.csv("data/cleaned_itemdata.csv", header=TRUE)
scales <- read.csv("data/cleaned_scaledata_long.csv", header=TRUE)


"##########################
INSPECT SCALES:
reliability
descriptive stats (means. SDs, skew, and kurtosis)
factor analysis

ASSUMPTIONS CHECK:
Normality
-distributions (histograms and boxplots)
-Skewness and Kurtosis (see above)
-QQ-plt
-Outliers
Independence
-multicollinearity (VIF)
###########################"

#### SCALE INSPECTION ####

## check reliabilities
procjust.alpha.z <- select(items, 1,2,3,4,5,6,7,9,50,51,52,53,54,55,56,57,58) ## DO NOT USE
alpha.pj <- psych::alpha(procjust.alpha)
alpha.pj

procjust.alpha <- select(items, 1,2,3,4,5,6,7,50,51,52,53,54,55,56,57) #removed ROA items (9, 58) due to low item-total corr
a1 <- psych::alpha(procjust.alpha)
alpha.pj <- as.data.frame(a1$total)
rm(procjust.alpha, a1)

interjust.alpha <- select(items, 10,11,12,13,14,15,16,17,18,59,60,61,62,63,64,65,66,67)
a2 <- psych::alpha(interjust.alpha)
alpha.ij <- as.data.frame(a2$total)
rm(interjust.alpha, a2)

orgjust.alpha <- select(items, 1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67) ##again, removed ROA items (9, 58)
a3 <- psych::alpha(orgjust.alpha)
alpha.oj <- as.data.frame(a3$total)
rm(orgjust.alpha, a3)

genatrct.alpha <-select(items,19,20,21,22,23,68,69,70,71,72)   
a4 <- psych::alpha(genatrct.alpha) 
alpha.ga <- as.data.frame(a4$total)
rm(genatrct.alpha, a4)

intpurs.alpha <- select(items, 24,25,26,27,28,73,74,75,76,77)
a5<- psych::alpha(intpurs.alpha)
alpha.ip <- as.data.frame(a5$total)
rm(intpurs.alpha, a5)

prest.alpha <- select(items,29,30,31,32,33,78,79,80,81,82)
a6 <- psych::alpha(prest.alpha)
alpha.prest <- as.data.frame(a6$total)
rm(prest.alpha,a6)

orgatrct.alpha <- select(items, 19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82)
a7 <- psych::alpha(orgatrct.alpha, check.keys = TRUE) 
alpha.oa <- as.data.frame(a7$total)
rm(orgatrct.alpha, a7)

compete.alpha <- select(items, 34,35,36,37,83,84,85,86)
a8 <- psych::alpha(compete.alpha)
a8
alpha.c <- as.data.frame(a8$total)
rm(compete.alpha, a8)

socresp.alpha <- select(items, 38,39,40,41,87,88,89,90)
a9 <- psych::alpha(socresp.alpha)
a9
alpha.sr <- as.data.frame(a9$total)
rm(socresp.alpha,a9)

support.alpha <- select(items, 42,43,44,45,91,92,93,94)
a10 <- psych::alpha(support.alpha)
a10
alpha.s <- as.data.frame(a10$total)
rm(support.alpha,a10)

innovate.alpha <- select(items, 46,47,48,49,95,96,97,98)
a11 <- psych::alpha(innovate.alpha)
a11
alpha.i <- as.data.frame(a11$total)
rm(innovate.alpha,a11)


##### Boxplots of primary variables by condition
ggplot(scales, aes(x=condition, y=orgjust, fill=condition)) +
  geom_boxplot() +
  ggtitle("Organization Justice Scores by condition")

ggplot(scales, aes(x=condition, y=orgatrct, fill=condition)) +
  geom_boxplot() +
  ggtitle("Organization Attraction Scores by condition")

ggplot(scales, aes(x=condition, y=innovate, fill=condition)) +
  geom_boxplot() +
  ggtitle("Innovativeness Scores by condition")

ggplot(scales, aes(x=condition, y=support, fill=condition)) +
  geom_boxplot() +
  ggtitle("Supportiveness Scores by condition")

ggplot(scales, aes(x=condition, y=compete, fill=condition)) +
  geom_boxplot() +
  ggtitle("Competiveness Scores by condition")

ggplot(scales, aes(x=condition, y=socresp, fill=condition)) +
  geom_boxplot() +
  ggtitle("Social Responsibility Scores by condition")

##### descriptive statistics
describe(scales$procjust)
describeBy(scales$procjust, scales$condition)

describe(scales$interjust)
describeBy(scales$interjust, scales$condition)

describe(scales$orgjust)
describeBy(scales$orgjust, scales$condition)

describe(scales$genatrct)
describeBy(scales$genatrct, scales$condition)

describe(scales$intpurs)
describeBy(scales$intpurs, scales$condition)

describe(scales$prest)
describeBy(scales$prest, scales$condition)

describe(scales$orgatrct)
describeBy(scales$orgatrct, scales$condition)

describe(scales$compete)
describeBy(scales$compete, scales$condition)

describe(scales$socresp)
describeBy(scales$socresp, scales$condition)

describe(scales$support)
describeBy(scales$support, scales$condition)

describe(scales$innovate)
describeBy(scales$innovate, scales$condition)


### CFA for scales   
"need to work on interpretation of findings"

#first need to subset 'items' dataframe into scale item dataframes
spjs <- select(items, 1:18, 50:67)
oa <- select(items, 19:33, 68:82)
culture <- select(items, 34:49, 83:98) 

fa.parallel(spjs)
fa(spjs, nfactors=2, rotate="promax", fm="ml")

fa.parallel(oa)
fa(oa, nfactors=3, rotate="promax", fm="ml")

fa.parallel(culture)
fa(spjs, nfactors=4, rotate="promax", fm="ml")


##### ASSUMPTIONS CHECK #####

##### examine distributions of variables
hist(scales$procjust)
densityPlot(scales$procjust)

hist(scales$interjust) #skewed 
densityPlot(scales$interjust)

hist(scales$orgjust)
densityPlot(scales$orgjust)

hist(scales$genatrct) 
densityPlot(scales$genatrct)

hist(scales$intpurs) 
densityPlot(scales$intpurs)

hist(scales$prest) 
densityPlot(scales$prest)

hist(scales$orgatrct) #skewed, as are subscales
densityPlot(scales$orgatrct)

hist(scales$compete)
densityPlot(scales$compete)

hist(scales$socresp)
densityPlot(scales$socresp)

hist(scales$support)
densityPlot(scales$support)

hist(scales$innovate)
densityPlot(scales$innovate)


# QQ plot  
scales.no.na <- na.omit(scales) #omitting NA cases for tests - might consider doing this during data prep too

lm1 <- lm(orgatrct ~ AVI.id, data=scales.no.na)
plot(orgatrct ~ AVI.id, data=scales.no.na) 
plot(lm1)
summary(lm1)

lm2 <- lm(orgjust ~ AVI.id, data=scales.no.na)
plot(orgjust ~ AVI.id, data=scales.no.na) 
plot(lm2)
summary(lm2)

lm3 <- lm(innovate ~ AVI.id, data= scales.no.na)
plot(innovate ~ AVI.id, data=scales.no.na) 
plot(lm3)
summary(lm3)

lm4 <- lm(support ~ AVI.id, data= scales.no.na)
plot(support ~ AVI.id, data=scales.no.na) 
plot(lm4)
summary(lm4)

lm5 <- lm(compete ~ AVI.id, data= scales.no.na)
plot(compete ~ AVI.id, data=scales.no.na) 
plot(lm5)
summary(lm5)

lm6 <- lm(socresp ~ AVI.id, data= scales.no.na)
plot(socresp ~ AVI.id, data=scales.no.na) 
plot(lm6)
summary(lm6)

lm7 <- lm(orgatrct ~ orgjust, data=scales.no.na)
plot(orgatrct ~ orgjust, data=scales.no.na)
abline(lm7, col="red")
plot(lm7)
summary(lm7)

lm8 <- lm(orgatrct ~ innovate, data=scales.no.na)
plot(orgatrct ~ innovate, data=scales.no.na)
abline(lm8, col="red")
plot(lm8)
summary(lm8)

lm9 <- lm(orgatrct ~ compete, data=scales.no.na)
plot(orgatrct ~ compete, data=scales.no.na)
abline(lm9, col="red")
plot(lm9)
summary(lm9)

lm10 <- lm(orgatrct ~ support, data=scales.no.na)
plot(orgatrct ~ support, data=scales.no.na)
abline(lm10, col="red")
plot(lm10)
summary(lm10)

lm11 <- lm(orgatrct ~ socresp, data=scales.no.na)
plot(orgatrct ~ socresp, data=scales.no.na)
abline(lm11, col="red")
plot(lm11)
summary(lm11)

rm(lm1, lm2, lm3, lm4, lm5, lm6, lm6, lm7, lm8, lm9, lm10, lm11)

## investigate collinearity   #Def some issues to address here ## still need VIF
collinear <- lm(orgjust ~ innovate, data=scales.no.na)
plot(orgatrct ~ innovate, data=scales.no.na)
abline(collinear, col="red")
plot(collinear)
summary(collinear)

collinear1 <- lm(orgjust ~ compete, data=scales.no.na)
plot(orgjust ~ compete, data=scales.no.na)
abline(collinear1, col="red")
plot(collinear1)
summary(collinear1)

collinear2 <- lm(orgjust ~ support, data=scales.no.na) ## there are some weird patterns 
plot(orgjust ~ support, data=scales.no.na)             ## with culture dimensions
abline(collinear2, col="red")
plot(collinear2)
summary(collinear2)

collinear3 <- lm(orgjust ~ socresp, data=scales.no.na)
plot(orgjust ~ socresp, data=scales.no.na)
abline(collinear3, col="red")
plot(collinear3)
summary(collinear3)

collinear4 <- lm(innovate ~ orgjust, data=scales.no.na)
plot(innovate ~ orgjust, data=scales.no.na)
abline(collinear4, col="red")
plot(collinear4)
summary(collinear4)

collinear5 <- lm(compete ~ orgjust, data=scales.no.na)
plot(compete ~ orgjust, data=scales.no.na)
abline(collinear5, col="red")
plot(collinear5)
summary(collinear5)

collinear6 <- lm(socresp ~ orgjust, data=scales.no.na)
plot(socresp ~ orgjust, data=scales.no.na)
abline(collinear6, col="red")
plot(collinear6)
summary(collinear6)

rm(collinear, collinear1, collinear2, collinear3, collinear4, collinear5, collinear6)


## REMOVE OUTLIERS / PROBLEMATIC CASES


